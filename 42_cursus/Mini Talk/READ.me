Mini Talk is a 42lisbon project to send a message from a server to a client, using only 2 signals SIGUSR1 and SIGUSR2.
Allowed functions:
◦ write
◦ ft_printf and any equivalent YOU coded ◦ signal
◦ sigemptyset
◦ sigaddset
◦ sigaction
◦ kill
◦ getpid
◦ malloc
◦ free
◦ pause
◦ sleep
◦ usleep
◦ exit

To make that project come true I needed help. The first thing I had to do was understand signals and how they work, to do that I watched some videos like: 
https://www.youtube.com/watch?v=PErrlOx3LYE&ab_channel=CodeVault
https://www.youtube.com/watch?v=jF-1eFhyz1U&ab_channel=CodeVault
To understand how to handle, use and what signals actually are. CodeVault has some videos to help with that.

After watching some videos I had to uderstand what is fork (to a better understanding, not necessary):
https://www.dca.ufrn.br/~adelardo/cursos/DCA409/node34.html 

After all I just needed to understand bitwise operator with: 
https://www.youtube.com/watch?v=jlQmeyce65Q&ab_channel=NesoAcademy 
https://www.youtube.com/watch?v=8aFik6lPPaA&ab_channel=NesoAcademy

all my references are listed below.
https://www.computerhope.com/jargon/p/pid.htm
https://linuxhint.com/signal_handlers_c_programming_language/
https://www.engineersgarage.com/how-to-send-message-between-
processes-using-signal-in-raspberry-pi-part-25-38/
https://www.youtube.com/watch?v=PErrlOx3LYE&ab_channel=CodeVault
https://www.youtube.com/watch?v=jF-1eFhyz1U&ab_channel=CodeVault
https://man7.org/linux/man-pages/man7/signal.7.html
https://www.dca.ufrn.br/~adelardo/cursos/DCA409/node34.html -> para 
https://unix.stackexchange.com/questions/362559/list-of-terminal-generated-signals-eg-ctrl-c-sigint
